{"ast":null,"code":"var _jsxFileName = \"G:\\\\app\\\\employee-management-app\\\\frontend\\\\src\\\\components\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    // Fetch projects data when the component mounts\n    const fetchProjects = async () => {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5001/api/projects', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setProjects(response.data);\n    };\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"View Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, project.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Card","Button","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","fetchProjects","token","localStorage","getItem","response","get","headers","Authorization","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","project","Body","Title","name","Text","description","variant","id","_c","$RefreshReg$"],"sources":["G:/app/employee-management-app/frontend/src/components/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Card, Button } from 'react-bootstrap';\n\nconst Projects = () => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    // Fetch projects data when the component mounts\n    const fetchProjects = async () => {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5001/api/projects', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setProjects(response.data);\n    };\n\n    fetchProjects();\n  }, []);\n\n  return (\n    <Container>\n      <h1 className=\"mt-4\">Projects</h1>\n      {projects.map((project) => (\n        <Card key={project.id} className=\"mt-4\">\n          <Card.Body>\n            <Card.Title>{project.name}</Card.Title>\n            <Card.Text>{project.description}</Card.Text>\n            <Button variant=\"primary\">View Project</Button>\n          </Card.Body>\n        </Card>\n      ))}\n    </Container>\n  );\n};\n\nexport default Projects;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,oCAAoC,EAAE;QACrEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUN,KAAK;QAChC;MACF,CAAC,CAAC;MACFF,WAAW,CAACK,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC;IAEDR,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA,CAACJ,SAAS;IAAAkB,QAAA,gBACRd,OAAA;MAAIe,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjChB,QAAQ,CAACiB,GAAG,CAAEC,OAAO,iBACpBrB,OAAA,CAACH,IAAI;MAAkBkB,SAAS,EAAC,MAAM;MAAAD,QAAA,eACrCd,OAAA,CAACH,IAAI,CAACyB,IAAI;QAAAR,QAAA,gBACRd,OAAA,CAACH,IAAI,CAAC0B,KAAK;UAAAT,QAAA,EAAEO,OAAO,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACvCnB,OAAA,CAACH,IAAI,CAAC4B,IAAI;UAAAX,QAAA,EAAEO,OAAO,CAACK;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC5CnB,OAAA,CAACF,MAAM;UAAC6B,OAAO,EAAC,SAAS;UAAAb,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC,GALHE,OAAO,CAACO,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMf,CACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACjB,EAAA,CAhCID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}